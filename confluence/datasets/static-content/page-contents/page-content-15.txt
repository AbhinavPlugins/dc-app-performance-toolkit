<p class="auto-cursor-target"><br /></p>
<p class="auto-cursor-target"><br /></p>
<p><br /></p>
<table class="wysiwyg-macro" style="background-image: url(''); background-repeat: no-repeat;" data-macro-name="section" data-macro-schema-version="1" data-macro-body-type="RICH_TEXT">
<tbody>
   <tr>
      <td class="wysiwyg-macro-body">
         <p class="auto-cursor-target"><img class="editor-inline-macro" src="" data-macro-name="space-details" data-macro-schema-version="1" /></p>
         <table class="wysiwyg-macro" style="background-image: url(''); background-repeat: no-repeat;" data-macro-name="column" data-macro-schema-version="1" data-macro-body-type="RICH_TEXT">
<tbody>
   <tr>
      <td class="wysiwyg-macro-body">
         <p class="auto-cursor-target">Test&nbsp;</p>
         <table class="wysiwyg-macro" style="background-image: url(''); background-repeat: no-repeat;" data-macro-name="code" data-macro-schema-version="1" data-macro-body-type="PLAIN_TEXT">
<tbody>
   <tr>
      <td class="wysiwyg-macro-body">
         <pre>import java.awt.Rectangle;\n\npublic class ObjectVarsAsParameters\n{\tpublic static void main(String[] args)\n\t{\tgo();\n\t}\n\t\n\tpublic static void go()\n\t{\tRectangle r1 = new Rectangle(0,0,5,5);\n\t\tSystem.out.println("In method go. r1 " + r1 + "\\n");\n\t\t// could have been \n\t\t//System.out.prinltn("r1" + r1.toString());\n\t\tr1.setSize(10, 15);\n\t\tSystem.out.println("In method go. r1 " + r1 + "\\n");\n\t\talterPointee(r1);\n\t\tSystem.out.println("In method go. r1 " + r1 + "\\n");\n\t\t\n\t\talterPointer(r1);\n\t\tSystem.out.println("In method go. r1 " + r1 + "\\n");\n\t}\n\t\n\tpublic static void alterPointee(Rectangle r)\n\t{\tSystem.out.println("In method alterPointee. r " + r + "\\n");\n\t\tr.setSize(20, 30);\n\t\tSystem.out.println("In method alterPointee. r " + r + "\\n");\n\t}\n\t\n\tpublic static void alterPointer(Rectangle r)\n\t{\tSystem.out.println("In method alterPointer. r " + r + "\\n");\n\t\tr = new Rectangle(5, 10, 30, 35);\n\t\tSystem.out.println("In method alterPointer. r " + r + "\\n");\n\t}\n\t\n\t\n}</pre>
      </td>
   </tr>
</tbody>
</table>
<p class="auto-cursor-target"><br /></p>
</td></tr></tbody></table>
<p class="auto-cursor-target"><br /></p>
<table class="wysiwyg-macro" style="background-image: url(''); background-repeat: no-repeat;" data-macro-name="column" data-macro-schema-version="1" data-macro-body-type="RICH_TEXT">
<tbody>
   <tr>
      <td class="wysiwyg-macro-body">
         <p class="auto-cursor-target"><br /></p>
         <table class="wysiwyg-macro" style="background-image: url(''); background-repeat: no-repeat;" data-macro-name="code" data-macro-schema-version="1" data-macro-body-type="PLAIN_TEXT">
<tbody>
   <tr>
      <td class="wysiwyg-macro-body">
         <pre>import java.awt.Color;\n\n\npublic class FilterExample\n{\n\t/*\n\t *pre: image != null, image.length &gt; 1, image[0].length &gt; 1\n\t *\timage is a rectangular matrix, neighberhoodSize &gt; 0\n\t *post: return a smoothed version of image\n\t */\n\tpublic Color[][] smooth(Color[][] image, int neighberhoodSize)\n\t{\t//check precondition\n\t\tassert image != null &amp;&amp; image.length &gt; 1 &amp;&amp; image[0].length &gt; 1\n\t\t\t\t&amp;&amp; ( neighberhoodSize &gt; 0 ) &amp;&amp; rectangularMatrix( image )\n\t\t\t\t: "Violation of precondition: smooth";\n\n\t\tColor[][] result = new Color[image.length][image[0].length];\n\n\t\tfor(int row = 0; row &lt; image.length; row++)\n\t\t{\tfor(int col = 0; col &lt; image[0].length; col++)\n\t\t\t{\tresult[row][col] = aveOfNeighbors(image, row, col, neighberhoodSize);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\n\t// helper method that determines the average color of a neighberhood\n\t// around a particular cell.\n\tprivate Color aveOfNeighbors(Color[][] image, int row, int col, int neighberhoodSize)\n\t{\tint numNeighbors = 0;\n\t\tint red = 0;\n\t\tint green = 0;\n\t\tint blue = 0;\n\n\t\tfor(int r = row - neighberhoodSize; r &lt;= row + neighberhoodSize; r++)\n\t\t{\tfor(int c = col - neighberhoodSize; c &lt;= col + neighberhoodSize; c++)\n\t\t\t{\tif( inBounds( image, r, c ) )\n\t\t\t\t{\tnumNeighbors++;\n\t\t\t\t\tred += image[r][c].getRed();\n\t\t\t\t\tgreen += image[r][c].getGreen();\n\t\t\t\t\tblue += image[r][c].getBlue();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tassert numNeighbors &gt; 0;\n\t\treturn new Color( red / numNeighbors, green / numNeighbors, blue / numNeighbors );\n\t}\n\n\t//helper method to determine if given coordinates are in bounds\n\tprivate boolean inBounds(Color[][] image, int row, int col)\n\t{\treturn (row &gt;= 0) &amp;&amp; (row &lt;= image.length) &amp;&amp; (col &gt;= 0)\n\t\t\t\t&amp;&amp; (col &lt; image[0].length);\n\t}\n\n\t//private method to ensure mat is rectangular\n\tprivate boolean rectangularMatrix( Color[][] mat )\n\t{\tboolean isRectangular = true;\n\t\tint row = 1;\n\t\tfinal int COLUMNS = mat[0].length;\n\n\t\twhile( isRectangular &amp;&amp; row &lt; mat.length )\n\t\t{\tisRectangular = ( mat[row].length == COLUMNS );\n\t\t\trow++;\n\t\t}\n\n\t\treturn isRectangular;\n\t}\n}</pre>
      </td>
   </tr>
</tbody>
</table>
<p class="auto-cursor-target"><br /></p>
</td></tr></tbody></table>
<p class="auto-cursor-target"><br /></p>
<p class="auto-cursor-target"><br /></p>
</td></tr></tbody></table>
<p class="auto-cursor-target"><br /></p>
<p><br /></p>
<p><br /></p>