<p class="auto-cursor-target"><br /></p>
<table class="wysiwyg-macro" style="background-repeat: no-repeat; background-image: url('');" data-macro-name="panel" data-macro-schema-version="1" data-macro-body-type="RICH_TEXT" data-macro-id="8c026a5b-f1bc-4152-b07e-0b3da33dbf96">
<tbody>
   <tr>
      <td class="wysiwyg-macro-body">
         <p>Lorem ipsum scelerisque torquent nostra phasellus accumsan sem duis, aliquam nulla volutpat inceptos lacus nam lacus, leo tincidunt nullam placerat diam netus pharetra taciti tristique urna curabitur quisque condimentum etiam nisl aenean hendrerit nostra, convallis ultricies justo a litora suspendisse nisl ultricies massa at suscipit, taciti dictumst euismod facilisis est netus aliquet nunc aenean consectetur felis est class aliquet justo nibh ipsum diam urna tempor, ultricies massa quis litora habitant in interdum ipsum pellentesque.</p>
         <p>Tempor platea ipsum tristique tellus imperdiet id at duis, mi sem habitant commodo metus posuere conubia enim tempor, vel viverra ut vulputate aliquam conubia tincidunt ad etiam ac leo nulla augue himenaeos potenti tincidunt pretium sit hac, pulvinar iaculis dui gravida potenti suscipit ipsum eget curabitur metus aliquam scelerisque metus lacinia euismod nullam auctor, varius curabitur posuere lectus venenatis scelerisque, dapibus suspendisse netus quis pharetra bibendum.</p>
         <p>Sodales adipiscing viverra nisl pretium litora maecenas dui quam lacus, dictumst ipsum sem ut vitae feugiat quisque justo rutrum pellentesque, suspendisse nam eleifend magna aliquet porta mattis curabitur augue consectetur nisi odio risus rutrum lorem cras aptent felis fusce, at vulputate blandit hendrerit netus mi est ipsum neque quisque cras quisque gravida taciti aenean non fames litora, imperdiet justo eu malesuada aliquet inceptos fermentum himenaeos eget, ligula sagittis risus primis eget varius amet non torquent mollis laoreet aenean commodo ullamcorper taciti mattis.</p>
         <p>Aliquet ligula libero ultrices non habitasse vivamus suspendisse tempor lacus, molestie semper nostra justo elit et habitasse netus auctor elit, vehicula purus euismod dictum diam convallis aenean ac libero ligula tempor libero sed mi donec facilisis gravida curae sapien potenti tellus eros, donec maecenas duis lorem euismod aliquam accumsan lectus curae gravida aliquam rhoncus odio pharetra ultricies class sagittis praesent taciti, viverra bibendum egestas inceptos quam nulla auctor, ligula condimentum orci a condimentum morbi ante class lorem dui metus consequat sagittis.</p>
      </td>
   </tr>
</tbody>
</table>
<p class="auto-cursor-target"><br /></p>
<table class="wysiwyg-macro" style="background-image: url(''); background-repeat: no-repeat;" data-macro-name="expand" data-macro-schema-version="1" data-macro-body-type="RICH_TEXT">
<tbody>
   <tr>
      <td class="wysiwyg-macro-body">
         <p class="auto-cursor-target"><br /></p>
         <table class="wysiwyg-macro" style="background-image: url(''); background-repeat: no-repeat;" data-macro-name="code" data-macro-schema-version="1" data-macro-body-type="PLAIN_TEXT">
<tbody>
   <tr>
      <td class="wysiwyg-macro-body">
         <pre>public class BinaryConverter {\n    \n    public static void main(String[] args){\n        for(int i = -5; i &lt; 33; i++){\n            System.out.println(i + ": " + toBinary(i));\n            System.out.println(i);\n            //always another way\n            System.out.println(i + ": " + Integer.toBinaryString(i));\n        }\n    }\n    \n    /*\n     * pre: none\n     * post: returns a String with base10Num in base 2\n     */\n    public static String toBinary(int base10Num){\n        boolean isNeg = base10Num &lt; 0;\n        base10Num = Math.abs(base10Num);        \n        String result = "";\n        \n        while(base10Num &gt; 1){\n            result = (base10Num % 2) + result;\n            base10Num /= 2;\n        }\n        assert base10Num == 0 || base10Num == 1 : "value is not &lt;= 1: " + base10Num;\n        \n        result = base10Num + result;\n        assert all0sAnd1s(result);\n        \n        if( isNeg )\n            result = "-" + result;\n        return result;\n    }\n    \n    /*\n     * pre: cal != null\n     * post: return true if val consists only of characters 1 and 0, false otherwise\n     */\n    public static boolean all0sAnd1s(String val){\n        assert val != null : "Failed precondition all0sAnd1s. parameter cannot be null";\n        boolean all = true;\n        int i = 0;\n        char c;\n        \n        while(all &amp;&amp; i &lt; val.length()){\n            c = val.charAt(i);\n            all = c == '0' || c == '1';\n            i++;\n        }\n        return all;\n    }\n}</pre>
      </td>
   </tr>
</tbody>
</table>
<p class="auto-cursor-target"><br /></p>
<table class="wysiwyg-macro" style="background-image: url(''); background-repeat: no-repeat;" data-macro-name="code" data-macro-schema-version="1" data-macro-body-type="PLAIN_TEXT">
<tbody>
   <tr>
      <td class="wysiwyg-macro-body">
         <pre>public class EnhancedFor\n{\n\tpublic static void main(String[] args)\n\t{\tint[] list ={1, 2, 3, 4, 5, 6, 7, 8, 9, 10};\n\t\tint sum = sumListEnhanced(list);\n\t\tSystem.out.println("Sum of elements in list: " + sum);\n\n\t\tSystem.out.println("Original List");\n\t\tprintList(list);\n\t\tSystem.out.println("Calling addOne");\n\t\taddOne(list);\n\t\tSystem.out.println("List after call to addOne");\n\t\tprintList(list);\n\t\tSystem.out.println("Calling addOneError");\n\t\taddOneError(list);\n\t\tSystem.out.println("List after call to addOneError. Note elements of list did not change.");\n\t\tprintList(list);\n\t}\n\n\t// pre: list != null \n\t// post: return sum of elements\n\t// uses enhanced for loop\n\tpublic static int sumListEnhanced(int[] list)\n\t{\tint total = 0;\n\t\tfor(int val : list)\n\t\t{\ttotal += val;\n\t\t}\n\t\treturn total;\n\t}\n\n\t// pre: list != null\n\t// post: return sum of elements\n\t// use traditional for loop\n\tpublic static int sumListOld(int[] list)\n\t{\tint total = 0;\n\t\tfor(int i = 0; i &lt; list.length; i++)\n\t\t{\ttotal += list[i];\n\t\t\tSystem.out.println( list[i] );\n\t\t}\n\t\treturn total;\n\t}\n\n\t// pre: list != null\n\t// post: none.\n\t// The code appears to add one to every element in the list, but does not\n\tpublic static void addOneError(int[] list)\n\t{\tfor(int val : list)\n\t\t{\tval = val + 1;\n\t\t}\n\t}\n\n\t// pre: list != null\n\t// post: adds one to every element of list\n\tpublic static void addOne(int[] list)\n\t{\tfor(int i = 0; i &lt; list.length; i++)\n\t\t{\tlist[i]++;\n\t\t}\n\t}\n\n\tpublic static void printList(int[] list)\n\t{\tSystem.out.println("index, value");\n\t\tfor(int i = 0; i &lt; list.length; i++)\n\t\t{\tSystem.out.println(i + ", " + list[i]);\n\t\t}\n\t}\n\n\n\n}</pre>
      </td>
   </tr>
</tbody>
</table>
<p class="auto-cursor-target"><br /></p>
</td></tr></tbody></table>
<p class="auto-cursor-target"><br /></p>
<p class="auto-cursor-target"><br /></p>